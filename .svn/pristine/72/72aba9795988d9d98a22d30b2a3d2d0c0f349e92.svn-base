<template>
    <div class="cart-page">
        <div class="cart-title">购物车</div>
        <div style="height:.5rem;background-color:#eee;"></div>
        <!-- 购物车商品列表 -->
        <ul class="cart-list">
            <li class="cart-list-item" v-for="item in cartList" :key="item.id">
                <div class="left-ico">
                    <span :class="{'selected-icon':item.isChecked==true,'not-select':item.isChecked==false}" @click="checkMe(item)"></span>
                </div>
                <div class="item-img">
                    <img :src="item.img">
                </div>
                <div class="item-text">
                    <p>{{item.name}}</p>
                    <p>￥{{item.price}}</p>
                </div>
                <div class="item-amount-ab" width="30%">
                    <span class="del amount-sp">
                        <span class="inner" @click="reduce(item)"></span>
                    </span>
                    <input class="amount" type="text" :value="item.count">
                    <span class="add amount-sp">
                        <span class="inner" @click="add(item)"></span>
                    </span>
                </div>
            </li>
        </ul>
        <div class="group-footer" :class="{'isdisplay':flag==false}">
            <div class="group-footer-btn" @click="account">结算</div>
            <!-- 全选的时候，修正所有商品的勾选图标 -->
            <div class="selectAll"><span :class="{'selectAll-ok':allchecked==true,'selectAll-no':allchecked==false}" @click="checkedAll()"></span>&nbsp; 全选</div>
            共：
            <span style="color: #e64f1a;">{{totalPrice}}</span>
        </div>
        <div class="empty" :class="{'isdisplay':flag==true}">
            <p class="empty-p">购物车空空，去购买美食吧！</p>
            <p class="to-buy"><router-link to="/market">去逛逛</router-link></p>
        </div>
    </div>
</template>
<script>
    export default {
        data () {
            return {
                flag:false,
                allchecked:true,
                totalPrice:0
            }
        },
        created () {
            // 购物车为空，或者都不勾选商品时
            var a =[];
            for(var n in this.$store.getters.getList){
                if(this.$store.getters.getList[n].isChecked)
                    a.push(1);
            }
            if(a.length==0){
                this.allchecked = false;
            }
            this.getTotal();
        },
        computed:{
            // 购物车数据写在计算属性中，依赖data中的
            cartList:function(){
                console.log(this.$store.getters.getList)
                if(this.$store.getters.getList.length!=0){
                    this.flag = true;
                }else{
                    this.flag = false;
                }
                return this.$store.getters.getList;
            }
        },
        methods:{
            checkMe:function(item){
                item.isChecked = !item.isChecked;            
                console.log(item.isChecked)
                var list = this.$store.getters.getList;
                var arr = [];

                list.forEach(c=>{
                    if(c.isChecked){
                        arr.push(1)
                    }
                });
                // 左右商品勾选全选
                if(arr.length === list.length){
                    this.allchecked = true;
                }else{
                    this.allchecked = false;
                }
                this.getTotal();
            
            },
            getTotal:function(){
                this.totalPrice = 0;
                this.$store.state.cartList.forEach(c=>{
                
                    if(c.isChecked){
                        this.totalPrice += c.price * c.count;
                    }
                });
                this.totalPrice = this.totalPrice.toFixed(2);
            },
            checkedAll:function(){
                var list = this.$store.getters.getList;
                this.allchecked = !this.allchecked;
                //console.log(this.allChecked);
                if(this.allchecked){
                    list.forEach(c=>{
                        c.isChecked = true;
                    });
                }else{
                    list.forEach(c=>{
                        c.isChecked = false;
                    });
                }
                this.getTotal();
            },
            mixData:function(desc,src){
                var obj = {};
                var arr = [];
                for(var i in src){
                    var n = src[i];
                    obj[n.id] = n;
                }

                for(var j in desc){
                    var m = desc[j];
                    if(obj[m.id]){
                        arr.push(obj[m.id]);
                    }else{
                        m.number = 0;
                        arr.push(m);
                    }
                }
                return arr;
            },
            add:function(item){
                // var cartData = this.$store.state.cartList;
                this.$store.dispatch('add',item);
                // this.mixData(this.lists,cartData);
                this.getTotal();
            },
            reduce:function(item){
                // var cartData = this.$store.state.cartList;
                this.$store.dispatch('reduce',item);
                // this.mixData(this.lists,cartData);
                this.getTotal();
            },
            account:function(){
                this.$store.dispatch('newOrder');
                // var cartData = this.$store.state.cartList;
                // this.mixData(this.lists,cartData); //更新数据
                 this.getTotal();
                 if(sessionStorage.getItem){
                     this.$router.go('/mine')
                 }
                 this.$router.go('/mine')
            }
        }
    }
</script>
<style scoped>
    .isdisplay{
        display: none;
    }
    .cart-page{
        background-color: #fff;
    }
    .empty{
        position: fixed;
        top: 7rem;
        left: 0;
        right: 0;
    }
    .empty p{
        text-align: center;
        font-size: .72rem;
        color: #666;
        margin-bottom: .5rem;
    }
    .empty .to-buy a{
        display: inline-block;
        padding: .2rem .3rem;
        color: #666;
        border: 2px solid #ccc;
        font-size: .8rem;
    }
    .cart-title{
        text-align: center;
        color: #333;
        font-size: 0.8rem;
        height: 2.2rem;
        line-height: 2.2rem;
        background-color: #fff;
        border-bottom: 1px solid #f2f2f2;
    }
    .cart-list-item{
        width: 100%;
        height:4rem;
        background-color: #fff;
        overflow: hidden;
        position: relative;
    }
    .cart-list-item .left-ico{
        float: left;
        width: 2.5rem;
        height: 100%;
        position: relative;
    }
    .cart-list-item .left-ico span{
        position: absolute;
        top: 50%;
        left: 50%;
        margin:-.5rem 0 0 -.5rem;
        display: inline-block;
        width: .9rem;
        height: .9rem;
    }
    /*未勾选*/
    .not-select{
        background: url();
        border: 1px solid #ddd;
        border-radius: 50%;
    }
    /*勾选图标 黄色*/
    .selected-icon{
        background: url(../assets/selected.png) no-repeat center center;
        background-size: .9rem .9rem;
    /* border-color: #ffd600;*/
    }
    .cart-list-item .item-img{
        width: 3rem;
        float: left;
        padding-top: .6rem;
    }
    .cart-list-item .item-img img{
        width: 3rem;
        margin: auto 0;
    }
    .cart-list-item .item-text{
        text-align: left;
        white-space: nowrap;
        text-overflow: ellipsis;
        overflow: hidden;
        float: left;
        line-height: 1.5rem;
        padding-left: .7rem;
        padding-top: .6rem;
    }
    /*增加，减少商品*/
    .item-amount-ab{
        position: absolute;
        position: absolute;
        width: 5rem;
        height: 2.5rem;
        line-height: 2.5rem;
        right: 0;
        bottom: 0;
        text-align: center;
        /*border-radius: 50%;*/
        color: #f40;
    }
    .item-amount-ab .amount {
       border:none;
       width: 20%;
       height: 100%;
       outline: none;
       position: absolute;
       left:45%;
    }
    .item-amount-ab .amount-sp{
        display: inline-block;
        width: 40%;
        height: 100%;
        position: absolute;
        z-index: 2;
    }
    .item-amount-ab .del{
        left: 0;
        top: 0;
    }
    .item-amount-ab .add{
        right: 0;
        top: 0;
    }
    .inner{
        display: inline-block;
        width: 1.3rem;
        height: 1.3rem;
        text-align: center;
        line-height: 1.3rem;
        position: absolute;
        top: 50%;
        left: 50%;
        margin-top: -.65rem;
        margin-left: -.65rem;
        background: #ff4300 url(../assets/add_del.png) no-repeat left center;
        background-size: 200% 100%;
        border:solid 1px #ff7836;
        border-radius: 50%;
    }
    .item-amount-ab .add .inner{
        background-position: right center;
    }
    /*结算*/
    .group-footer{
        height: 2rem;
        line-height: 2rem;
        border-top: solid 1px #eee;
        padding-left: .7rem;
        overflow: hidden;
    }
    .group-footer-btn{
        float: right;
        background-color: rgba(255,120,54,.8);
        width: 5rem;
        text-align: center;
        color: #fff;
        font-size: .8rem;
    }
    .selectAll{
        position: relative;
        float: left;
        display: inline-block;
        width: 3.8rem;
        text-indent: .9rem;
    }
    .selectAll>span{
        position: absolute;
        top: 50%;
        left: 0;
        margin:-.45rem 0 0 0;
        display: inline-block;
        width: .9rem;
        height: .9rem;
    }
    .selectAll-no{
        background: url();
        border: 1px solid #ddd;
        border-radius: 50%;
    }
    .selectAll-ok{
        background: url(../assets/selected.png) no-repeat center center;
        background-size: .9rem .9rem;
    }
</style>